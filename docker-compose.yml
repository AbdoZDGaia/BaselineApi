services:
  api:
    build:
      context: ./Sql.Baseline.Api    # ← change if your path differs
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Default: Server=sql;Database=BaselineDb;User Id=sa;Password=P@ssw0rd;TrustServerCertificate=True;
      Redis__ConnectionString: redis:6379,abortConnect=false
      Jwt__Authority: https://baselinedoz.example.com/
      Jwt__Audience: sql-baseline-api
    ports:
      - "8080:8080"
    depends_on:
      sql:
        condition: service_healthy
      redis:
        condition: service_started
      seq:                     
        condition: service_started

  sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "P@ssw0rd"
    ports: ["1433:1433"]
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd","-S","localhost","-U","sa","-P","P@ssw0rd","-C","-Q","SELECT 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  prometheus:
    image: prom/prometheus:v2.53.0
    command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.retention.time=2d
        - --web.enable-lifecycle
    volumes:
        - ./ops/prometheus:/etc/prometheus:ro   # <— directory mount
    ports:
        - "9090:9090"
    depends_on:
        - api

  grafana:
    image: grafana/grafana:10.4.6
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    volumes:
      - ./ops/prometheus:/etc/prometheus:ro
    depends_on:
      - prometheus
  seq:
    image: datalust/seq:2024
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"              # host 5341 -> container 80
    volumes:
      - seq-data:/data         # persist Seq data
      

volumes:
  seq-data: